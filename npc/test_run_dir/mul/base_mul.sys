base_mul
input reset : bv<1>
input io_mul_valid : bv<1>
input io_flush : bv<1>
input io_mulw : bv<1>
input io_mul_signed : bv<2>
input io_multiplicand : bv<64>
input io_multiplier : bv<64>
node _state_T_3 : bv<1> = ite(io_flush, 1'b0, io_mul_valid)
node last : bv<1> = eq(cnt, zext(mulBits, 62))
output io_out_valid : bv<1> = and(last, state)
node _state_T_6 : bv<1> = ite(io_out_valid, 1'b0, 1'b1)
node _state_T_7 : bv<1> = ite(io_flush, 1'b0, _state_T_6)
node _state_T_9 : bv<1> = ite(state, _state_T_7, _state_T_3)
output io_mul_ready : bv<1> = not(state)
node next_valid : bv<1> = and(io_mul_valid, io_mul_ready)
node _mulBits_T_1 : bv<1> = and(next_valid, io_mulw)
node _mulBits_T_2 : bv<6> = ite(_mulBits_T_1, zext(5'b11111, 1), 6'b111111)
node _a_T : bv<130> = concat(a, 1'b0)
node _a_T_1 : bv<1> = not(next_valid)
node _a_T_2 : bv<1> = io_mul_signed[1]
node _a_T_3 : bv<1> = and(_a_T_2, io_mulw)
node _a_T_5 : bv<1> = io_multiplicand[31]
node _a_T_7 : bv<97> = ite(_a_T_5, 97'x1ffffffffffffffffffffffff, 97'x0)
node _a_T_8 : bv<161> = concat(_a_T_7, io_multiplicand)
node _a_T_10 : bv<1> = not(io_mulw)
node _a_T_11 : bv<1> = and(_a_T_2, _a_T_10)
node _a_T_13 : bv<1> = io_multiplicand[63]
node _a_T_15 : bv<65> = ite(_a_T_13, 65'x1ffffffffffffffff, 65'x0)
node _a_T_16 : bv<129> = concat(_a_T_15, io_multiplicand)
node _a_T_17 : bv<129> = ite(_a_T_11, _a_T_16, zext(io_multiplicand, 65))
node _a_T_18 : bv<161> = ite(_a_T_3, _a_T_8, zext(_a_T_17, 32))
node _a_T_19 : bv<161> = ite(_a_T_1, zext(a, 32), _a_T_18)
node _a_T_20 : bv<161> = ite(state, zext(_a_T, 31), _a_T_19)
node _b_T : bv<129> = zext(b[128:1], 1)
node _b_T_2 : bv<1> = io_mul_signed[0]
node _b_T_4 : bv<1> = and(_b_T_2, io_mulw)
node _b_T_5 : bv<1> = io_multiplier[31]
node _b_T_7 : bv<97> = ite(_b_T_5, 97'x1ffffffffffffffffffffffff, 97'x0)
node _b_T_8 : bv<161> = concat(_b_T_7, io_multiplier)
node _b_T_12 : bv<1> = and(_b_T_2, _a_T_10)
node _b_T_13 : bv<1> = io_multiplier[63]
node _b_T_15 : bv<65> = ite(_b_T_13, 65'x1ffffffffffffffff, 65'x0)
node _b_T_16 : bv<129> = concat(_b_T_15, io_multiplier)
node _b_T_17 : bv<129> = ite(_b_T_12, _b_T_16, zext(io_multiplier, 65))
node _b_T_18 : bv<161> = ite(_b_T_4, _b_T_8, zext(_b_T_17, 32))
node _b_T_19 : bv<161> = ite(_a_T_1, zext(b, 32), _b_T_18)
node _b_T_20 : bv<161> = ite(state, zext(_b_T, 32), _b_T_19)
node _cnt_T_1 : bv<69> = add(zext(cnt, 1), zext(1'b1, 68))
node _cnt_T_2 : bv<68> = _cnt_T_1[67:0]
node _cnt_T_3 : bv<68> = ite(state, _cnt_T_2, zext(1'b0, 67))
node _s_T : bv<1> = b[0]
node _s_T_1 : bv<1> = and(last, _s_T)
node _s_T_2 : bv<131> = sub(zext(result, 1), zext(a, 2))
node _s_T_3 : bv<130> = _s_T_2[129:0]
node _s_T_5 : bv<131> = add(zext(result, 1), zext(a, 2))
node _s_T_6 : bv<130> = _s_T_5[129:0]
node _s_T_7 : bv<130> = ite(_s_T, _s_T_6, result)
node s : bv<130> = ite(_s_T_1, _s_T_3, _s_T_7)
node _result_T_1 : bv<130> = ite(state, s, zext(1'b0, 129))
node _T_1 : bv<128> = result[127:0]
node _T_2 : bv<258> = mul(zext(a, 129), zext(b, 129))
node _T_3 : bv<1> = eq(zext(_T_1, 130), _T_2)
node _T_5 : bv<1> = not(reset)
node _T_6 : bv<1> = not(_T_3)
node _resetPhase : bv<1> = not(ugeq(_resetCount, 1'b1))
output io_result_hi : bv<64> = result[127:64]
output io_result_lo : bv<64> = result[63:0]
bad assert : bv<1> = not(implies(and(io_out_valid, _T_5), _T_3))
constraint _resetActive : bv<1> = implies(_resetPhase, reset)
state state : bv<1>
  [next] ite(reset, 1'b0, _state_T_9)
state mulBits : bv<6>
  [next] ite(reset, 6'b0, _mulBits_T_2)
state a : bv<129>
  [next] ite(reset, zext(129'x0, 32), _a_T_20)[128:0]
state b : bv<129>
  [next] ite(reset, zext(129'x0, 32), _b_T_20)[128:0]
state result : bv<130>
  [next] ite(reset, 130'x0, _result_T_1)
state cnt : bv<68>
  [next] ite(reset, 68'x0, _cnt_T_3)
state _resetCount : bv<1>
  [init] 1'b0
  [next] ite(_resetPhase, add(zext(_resetCount, 1), zext(1'b1, 1))[0], _resetCount)